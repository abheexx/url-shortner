version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: urlshortener-postgres
    environment:
      POSTGRES_DB: urlshortener
      POSTGRES_USER: urlshortener
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U urlshortener -d urlshortener"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - urlshortener-network

  redis:
    image: redis:7-alpine
    container_name: urlshortener-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - urlshortener-network

  api:
    build:
      context: ../..
      dockerfile: Dockerfile
    container_name: urlshortener-api
    environment:
      URLSHORTENER_SERVER_PORT: 8080
      URLSHORTENER_DATABASE_HOST: postgres
      URLSHORTENER_DATABASE_PORT: 5432
      URLSHORTENER_DATABASE_USER: urlshortener
      URLSHORTENER_DATABASE_PASSWORD: password
      URLSHORTENER_DATABASE_DBNAME: urlshortener
      URLSHORTENER_DATABASE_SSLMODE: disable
      URLSHORTENER_REDIS_HOST: redis
      URLSHORTENER_REDIS_PORT: 6379
      URLSHORTENER_REDIS_PASSWORD: ""
      URLSHORTENER_REDIS_DB: 0
      URLSHORTENER_LOGGING_LEVEL: debug
      URLSHORTENER_LOGGING_FORMAT: json
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - urlshortener-network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: urlshortener-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@urlshortener.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - urlshortener-network

volumes:
  postgres_data:
  redis_data:

networks:
  urlshortener-network:
    driver: bridge
